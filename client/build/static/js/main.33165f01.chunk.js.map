{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","filterText","filterTextInputHandler","type","onChange","value","PersonForm","addPerson","nameInputHander","newName","numberInputHandler","newNumber","onSubmit","Person","person","destroyPerson","name","toLowerCase","includes","number","onClick","Persons","persons","map","key","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","initNotification","message","Notification","notification","style","color","className","App","useState","setPersons","setNewName","setNewNumber","setFilterText","setNotification","useEffect","personService","initialPersons","clearNotification","time","setTimeout","updatePerson","window","confirm","filter","console","log","returnedPerson","p","catch","error","event","target","preventDefault","find","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33165f01.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filterText, filterTextInputHandler }) => (\n  <div>\n    filter show with <input type='text' onChange={filterTextInputHandler} value={filterText} />\n  </div>\n);\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({ addPerson, nameInputHander, newName, numberInputHandler, newNumber }) => {\n  return (\n    <>\n      <h2>Add a person</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input onChange={nameInputHander} value={newName} />\n        </div>\n        <div>number: <input onChange={numberInputHandler} value={newNumber} /></div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ person, filterText, destroyPerson }) => {\n  return (\n    person.name.toLowerCase().includes(filterText.toLowerCase())\n      ? <div>{person.name} {person.number} <button onClick={() => destroyPerson(person)}>delete</button></div>\n      : null\n  );\n};\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, filterText, destroyPerson }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      {persons.map(person =>\n        <Person\n          key={person.name}\n          person={person}\n          filterText={filterText}\n          destroyPerson={destroyPerson}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Persons;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst destroy = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  destroy\n};","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nimport personService from './services/persons';\n\nconst initNotification = {\n  message: null,\n  type: true\n};\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) return null;\n  const style = notification.type ? { color: 'green' } : { color: 'red' };\n  return (\n    <div className='notification' style={style}>\n      {notification.message}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterText, setFilterText] = useState('');\n  const [notification, setNotification] = useState(initNotification);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      });\n  }, []);\n\n  const clearNotification = (time) => {\n    setTimeout(() => {\n      setNotification({ message: null });\n    }, time);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (persons.find(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      updatePerson(newName, newNumber);\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNotification({\n            message: `Added ${returnedPerson.name}`,\n            type: true\n          });\n          clearNotification(4000);\n        })\n        .catch(error => {\n          setNotification({\n            message: error.response.data.error,\n            type: false\n          });\n          clearNotification(4000);\n        });\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const updatePerson = (newName, newNumber) => {\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const id = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())[0].id;\n      console.log('id:', id);\n      const updatedPerson = {\n        name: newName,\n        number: newNumber\n      };\n      personService\n        .update(id, updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== id ? p : returnedPerson));\n          setNotification({\n            message: `Updated ${newName}'s number to ${newNumber}`,\n            type: true\n          });\n          clearNotification(4000);\n        })\n        .catch(error => {\n          console.log(error.response.data.error);\n          setNotification({\n            message: error.response.data.error,\n            type: false\n          });\n          clearNotification(4000);\n        });\n    }\n  };\n\n  const destroyPerson = person => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .destroy(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id));\n          setNotification({\n            message: `Deleted ${person.name}`,\n            type: true\n          });\n          clearNotification(4000);\n        });\n    }\n  };\n\n  const nameInputHander = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const numberInputHandler = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const filterTextInputHandler = (event) => {\n    setFilterText(event.target.value);\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter filterText={filterText} filterTextInputHandler={filterTextInputHandler} />\n      <PersonForm\n        addPerson={addPerson}\n        nameInputHander={nameInputHander}\n        newName={newName}\n        numberInputHandler={numberInputHandler}\n        newNumber={newNumber}\n      />\n      <Persons persons={persons} filterText={filterText} destroyPerson={destroyPerson} />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}